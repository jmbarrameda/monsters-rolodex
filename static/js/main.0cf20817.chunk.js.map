{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","monster","className","alt","src","id","name","email","CardList","monsters","map","SearchBox","handleChange","placeholder","type","onChange","App","e","setState","searchField","target","value","console","log","state","fetch","then","res","json","user","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAGaA,G,YAAO,SAACC,GAAW,IACpBC,EAAYD,EAAZC,QACR,OACI,sBAAKC,UAAU,iBAAf,UACI,qBACIC,IAAI,UACJC,IAAG,+BAA0BH,EAAQI,GAAlC,4BAEP,6BAAKJ,EAAQK,OACb,4BAAIL,EAAQM,aCRXC,G,MAAW,SAACR,GAAD,OACpB,qBAAKE,UAAU,YAAf,SACKF,EAAMS,SAASC,KAAI,SAACT,GAAD,OAChB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQI,WCJlBM,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,YACtC,OACI,uBACIX,UAAU,SACVY,KAAK,SACLD,YAAaA,EACbE,SAAUH,MCuCPI,E,kDA3CX,aAAe,IAAD,8BACV,gBAkBJJ,aAAe,SAACK,GACZ,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,QAAS,WAC3CC,QAAQC,IAAI,EAAKC,MAAML,iBAlB3B,EAAKK,MAAQ,CACTf,SAAU,GACVU,YAAa,IALP,E,gEASO,IAAD,OAChBM,MAAM,8CACDC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OACF,EAAKX,SAAS,CAAET,SAAUoB,IAAQ,WAC9BP,QAAQC,IAAI,sB,+BAWlB,IAAD,EAC6BO,KAAKN,MAA/Bf,EADH,EACGA,SAAUU,EADb,EACaA,YACZY,EAAmBtB,EAASuB,QAAO,SAAC/B,GAAD,OACrCA,EAAQK,KAAK2B,cAAcC,SAASf,EAAYc,kBAEpD,OACI,sBAAK/B,UAAU,MAAf,UACI,kDACA,cAAC,EAAD,CACIW,YAAY,kBACZD,aAAckB,KAAKlB,eAEvB,cAAC,EAAD,CAAUH,SAAUsB,W,GAtClBI,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0cf20817.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card.styles.css\";\r\n\r\nexport const Card = (props) => {\r\n    const { monster } = props;\r\n    return (\r\n        <div className=\"card-container\">\r\n            <img\r\n                alt=\"monster\"\r\n                src={`https://robohash.org/${monster.id}?set=set2&size=180x180`}\r\n            />\r\n            <h2>{monster.name}</h2>\r\n            <p>{monster.email}</p>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { Card } from \"../card/card.component.jsx\";\r\nimport \"./card-list.styles.css\";\r\n\r\nexport const CardList = (props) => (\r\n    <div className=\"card-list\">\r\n        {props.monsters.map((monster) => (\r\n            <Card key={monster.id} monster={monster} />\r\n        ))}\r\n    </div>\r\n);\r\n","import React from \"react\";\r\nimport \"./search-box.styles.css\";\r\n\r\nexport const SearchBox = ({ handleChange, placeholder }) => {\r\n    return (\r\n        <input\r\n            className=\"search\"\r\n            type=\"search\"\r\n            placeholder={placeholder}\r\n            onChange={handleChange}\r\n        />\r\n    );\r\n};\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { CardList } from \"./components/card-list/card-list.component.jsx\";\nimport { SearchBox } from \"./components/search-box/search-box.component.jsx\";\nclass App extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            monsters: [],\n            searchField: \"\",\n        };\n    }\n\n    componentDidMount() {\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\n            .then((res) => res.json())\n            .then((user) =>\n                this.setState({ monsters: user }, () => {\n                    console.log(\"i mounted!\");\n                })\n            );\n    }\n\n    handleChange = (e) => {\n        this.setState({ searchField: e.target.value }, () => {\n            console.log(this.state.searchField);\n        });\n    };\n\n    render() {\n        const { monsters, searchField } = this.state;\n        const filteredMonsters = monsters.filter((monster) =>\n            monster.name.toLowerCase().includes(searchField.toLowerCase())\n        );\n        return (\n            <div className=\"App\">\n                <h1>Monsters Rolodex</h1>\n                <SearchBox\n                    placeholder=\"search monsters\"\n                    handleChange={this.handleChange}\n                />\n                <CardList monsters={filteredMonsters}></CardList>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}